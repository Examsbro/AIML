#Week 11: Neural Network
import numpy as np

def sigmoid(x):
    return 1 / (1 + np.exp(-x))

X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y = np.array([[0], [1], [1], [0]])

input_layer_neurons = 2
hidden_layer_neurons = 4
output_layer_neurons = 1

np.random.seed(42)
weights_hidden = np.random.uniform(size=(input_layer_neurons, hidden_layer_neurons))
weights_output = np.random.uniform(size=(hidden_layer_neurons, output_layer_neurons))

hidden_layer_input = np.dot(X, weights_hidden)
hidden_layer_output = sigmoid(hidden_layer_input)
output_layer_input = np.dot(hidden_layer_output, weights_output)
output = sigmoid(output_layer_input)

print("Output after forward pass:", output)

output:-
Output after forward pass: [[0.888]
 [0.899]
 [0.902]
 [0.908]]
